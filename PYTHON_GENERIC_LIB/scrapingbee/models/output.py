# -*- coding: utf-8 -*-

"""
scrapingbee

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from scrapingbee.models.href import Href


class Output(object):

    """Implementation of the 'Output' model.

    TODO: type model description here.

    Attributes:
        anchor (str): TODO: type description here.
        href (Href): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "anchor": 'anchor',
        "href": 'href'
    }

    def __init__(self,
                 anchor=None,
                 href=None):
        """Constructor for the Output class"""

        # Initialize members of the class
        self.anchor = anchor 
        self.href = href 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        anchor = dictionary.get("anchor") if dictionary.get("anchor") else None
        href = Href.from_dictionary(dictionary.get('href')) if dictionary.get('href') else None
        # Return an object of this model
        return cls(anchor,
                   href)
